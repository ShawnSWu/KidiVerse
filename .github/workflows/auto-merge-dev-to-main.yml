name: Auto Merge Development to Main

on:
  push:
    branches: [development]
  workflow_dispatch:

# These permissions are needed to interact with GitHub's API and push to the repository
permissions:
  contents: write
  pull-requests: write
  actions: write  # Needed to trigger other workflows

jobs:
  merge-development-to-main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT || github.token }}

      - name: Set up Git identity
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'

      - name: Merge development into main
        run: |
          # Ensure we have the latest changes
          git fetch origin
          
          # Checkout main branch
          git checkout main
          
          # Pull the latest changes from main
          git pull origin main
          
          # Try to merge development into main
          # Use --no-edit to use the default merge message
          # Use --no-ff to always create a merge commit
          git merge --no-ff --no-edit development
          
          # Push the merge commit back to main
          # This will automatically trigger the knowledge-graph workflow
          # due to the push to main branch
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.PAT || github.token }}
      
      - name: Wait for knowledge-graph workflow to complete
        if: success()
        uses: fountainhead/action-wait-for-check@v1.0.2
        id: wait-for-graph
        with:
          token: ${{ secrets.PAT || github.token }}
          checkName: 'Build Knowledge Graph'
          ref: 'main'
          timeoutSeconds: 600  # 10 minutes timeout
          intervalSeconds: 10  # Check every 10 seconds

      - name: Show merge result
        run: git log -1 --oneline
